<Application x:Class="BookStats.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:BookStats"
             StartupUri="Windows/MainWindow.xaml">
    <Application.Resources>
        <BitmapImage x:Key="LogoSource" UriSource="/Resources/Logo.png"/>
        
        <SolidColorBrush x:Key="ColorPrimary" Color="#EFF2F7"/>
        <SolidColorBrush x:Key="ColorSecondary" Color="#DCDCDC"/>
        <SolidColorBrush x:Key="ColorAdditional" Color="#ACACAC"/>
        <SolidColorBrush x:Key="ColorAdditionalHover" Color="#BCBCBC"/>
        <SolidColorBrush x:Key="ColorAdditionalPressed" Color="#8B8B8B"/>
        <SolidColorBrush x:Key="ColorAccent" Color="#623ED0"/>
        <SolidColorBrush x:Key="ColorAccentHover" Color="#7B5CD6"/>
        <SolidColorBrush x:Key="ColorAccentPressed" Color="#583ED0"/>
        <SolidColorBrush x:Key="ColorText60" Color="#6E7783"/>
        <SolidColorBrush x:Key="ColorText100" Color="#121518"/>
        <SolidColorBrush x:Key="ColorText0" Color="#EFF2F7"/>

        <LinearGradientBrush x:Key="Gradient" StartPoint="0 0" EndPoint="1 1">
            <LinearGradientBrush.GradientStops>
                <GradientStop Offset="0" Color="#583ED0" />
                <GradientStop Offset="0.15" Color="#623ED0" />
                <GradientStop Offset="0.25" Color="#6A5BD5" />
                <GradientStop Offset="0.35" Color="#613ED0" />
                <GradientStop Offset="0.5" Color="#563ED0" />
                <GradientStop Offset="0.7" Color="#513ED0" />
                <GradientStop Offset="1" Color="#7B5CD6" />
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <!--Top Rounded Button Style-->
        <Style x:Key="roundedButton" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource ColorAdditional}"/>
            <Setter Property="Foreground" Value="{DynamicResource ColorAccent}"/>
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="50" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ColorAdditionalHover}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ColorAdditionalPressed}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

       

        <!--Add Button Style-->
        <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource ColorAccent}"/>
            <Setter Property="Foreground" Value="{DynamicResource ColorText0}"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="7" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ColorAccentHover}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ColorAccentPressed}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#region AddEdit-->

        <!--AddEdit TextBox Style-->
        <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
            <Setter Property="Width" Value="auto"/>
            <Setter Property="Background" Value="{DynamicResource ColorSecondary}"/>
            <Setter Property="Foreground" Value="{DynamicResource ColorText100}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="10 4"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBoxBase">
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" BorderThickness="1" BorderBrush="{DynamicResource ColorText60}">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False"   VerticalScrollBarVisibility="Hidden" 
                                      HorizontalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource ColorAccent}" TargetName="border"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource ColorAccent}" TargetName="border"/>
                                <Setter Property="BorderThickness" Value="3" TargetName="border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type PasswordBox}" TargetType="{x:Type PasswordBox}">
            <Setter Property="Width" Value="auto"/>
            <Setter Property="Background" Value="{DynamicResource ColorSecondary}"/>
            <Setter Property="Foreground" Value="{DynamicResource ColorText100}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="10 4"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" BorderThickness="1" BorderBrush="{DynamicResource ColorText60}">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False"   VerticalScrollBarVisibility="Hidden" 
                                      HorizontalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource ColorAccent}" TargetName="border"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource ColorAccent}" TargetName="border"/>
                                <Setter Property="BorderThickness" Value="3" TargetName="border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--AddEdit TextBlock Style-->
        <Style x:Key="MainBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource ColorAccent}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="0 0"/>
            <Setter Property="Width" Value="auto"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0 0"/>
        </Style>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
            <Setter Property="Foreground" Value="{DynamicResource ColorAccent}"/>
            <Setter Property="TextDecorations" Value="None"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Red"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#region VIEW-->
        <!--Search Box Style-->
        <Style x:Key="txtboxSearch" TargetType="TextBox">
            <Setter Property="Background" Value="{DynamicResource ColorSecondary}"/>
            <Setter Property="Foreground" Value="{DynamicResource ColorText60}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="17 10 35 10"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0 10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBoxBase">
                        <Border x:Name="border" CornerRadius="20" Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" BorderThickness="1" BorderBrush="{DynamicResource ColorText60}">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False"   VerticalScrollBarVisibility="Hidden" 
                                      HorizontalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource ColorAccent}" TargetName="border"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource ColorAccent}" TargetName="border"/>
                                <Setter Property="BorderThickness" Value="2" TargetName="border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Add Button Style-->
        <Style x:Key="addButton" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource ColorAccent}"/>
            <Setter Property="Foreground" Value="{DynamicResource ColorText0}"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="7" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ColorAccentHover}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ColorAccentPressed}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Pagination Buttons Style-->
        <Style x:Key="paginationButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource ColorText60}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="1 0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" Padding="10 5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 0 0 1"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ColorAccentHover}"/>
                                <Setter Property="Foreground" Value="{DynamicResource ColorText0}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ColorAccentPressed}"/>
                                <Setter Property="Foreground" Value="{DynamicResource ColorText0}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Pagination TextBox Style-->
        <Style x:Key="txtboxPagination" TargetType="TextBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource ColorText60}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="MinWidth" Value="10"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBoxBase">
                        <Border x:Name="border" Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False"   VerticalScrollBarVisibility="Hidden" 
                                      HorizontalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource ColorAccent}" TargetName="border"/>
                                <Setter Property="BorderThickness" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource ColorAccent}" TargetName="border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="filterCloseButton" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource ColorText60}"/>
            <Setter Property="Foreground" Value="{DynamicResource ColorText0}"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="20" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Red"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="DarkRed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
    </Application.Resources>
</Application>
